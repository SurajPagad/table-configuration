<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_ui_page">
    <sys_ui_page action="INSERT_OR_UPDATE">
        <category>general</category>
        <client_script><![CDATA[function getArtifacts() {
    gel('response').innerText = 'Loading...';
    var appID = gel('app').value;
    if (appID) {
        var ga = new GlideAjax('GetAppArtifacts');
        ga.addParam('sysparm_name', 'getAppArtifacts');
        ga.addParam('sysparm_app_id', appID);
        ga.getXML(callBack);
    }

    function callBack(response) {
        var answer = response.responseXML.documentElement.getAttribute("answer");
        var parsedAnswer = JSON.parse(answer);
        var artifacts = parsedAnswer.artifacts;
        var instanceName = parsedAnswer.instance_name;
        var outerList = document.createElement("ul");
        outerList.setAttribute('style', 'list-style:none');
        artifacts.forEach(function(artifact) {
            var artifactItem = document.createElement("li");
            var artifactItemLabel = createListLabel(artifact.name);
            artifactItem.appendChild(artifactItemLabel);
            var artifactTypes = artifact.types ? artifact.types : [];
            if (checkAllArtifactType(artifactTypes)) {
                var artifactTypeList = document.createElement("ul");
                artifactTypeList.setAttribute('class', 'collapse in collapsible-type-list');
                artifactTypeList.setAttribute('id', artifact.name.replaceAll(/[\s|&]/g, ''));
                artifactItem.appendChild(artifactTypeList);
                artifactTypes.forEach(function(artifactType) {
                    var artifactTypeName = artifactType.name;
                    var metaDataFiles = artifactType.artifacts ? artifactType.artifacts : [];
                    if (metaDataFiles.length > 0) {
                        var artifacttypeItem = document.createElement("li");
                        var artifacttypeLabel = createListLabel(artifactType.name);
                        artifacttypeItem.appendChild(artifacttypeLabel);
                        var metaDataList = createMetaDataFileLink(metaDataFiles, artifactType, instanceName);
                        artifacttypeItem.appendChild(metaDataList);
                        artifactTypeList.appendChild(artifacttypeItem);
                    }

                });
                outerList.appendChild(artifactItem);
            }
        });
        gel('response').innerText = '';
        gel('response').appendChild(outerList);
        function toggleChevron(e) {
            $j(e.target)
                .prev('.list-label')
                .find('i.rotate')
                .toggleClass('icon-chevron-right icon-chevron-down');
        }

        $j('.collapsible-type-list').on('hidden.bs.collapse', toggleChevron);
        $j('.collapsible-type-list').on('shown.bs.collapse', toggleChevron);
    }
}

function checkAllArtifactType(artifactTypes) {
    return artifactTypes.some(function(artifactType) {
        var artifacts = artifactType.artifacts;
        if (artifacts)
            return artifacts.length > 0;
    });
}

function createListLabel(label) {
    var itemCollapse = document.createElement('span');
    itemCollapse.setAttribute('data-toggle', 'collapse');
    itemCollapse.setAttribute('data-target', '#' + label.replaceAll(/[\s|&]/g, ''));
    itemCollapse.setAttribute('class', 'list-label');
    var icon = document.createElement("i");
    icon.setAttribute('class', 'icon-chevron-down rotate');
    var itemLabel = document.createElement("span");
    itemLabel.innerText = label;
    itemCollapse.appendChild(icon);
    itemCollapse.appendChild(itemLabel);
    return itemCollapse;
}

function createMetaDataFileLink(metaDataFiles, artifactType, instanceName) {
    var metaDataList = document.createElement("ul");
    metaDataList.setAttribute('class', 'collapse in collapsible-file-list');
    metaDataList.setAttribute('id', artifactType.name.replaceAll(/[\s|&]/g, ''));
    metaDataFiles.forEach(function(metaDataFile) {
        var metaDataFileName = metaDataFile.name;
        var metaDataFileSysID = metaDataFile.sysId;
        var metaDataFileItem = document.createElement("li");
        var metaDataFileLink = document.createElement("a");
        metaDataFileLink.href = 'https://' + instanceName + '.service-now.com/' + artifactType.id + '.do?sys_id=' + metaDataFileSysID;
        metaDataFileLink.target = '_blank';
        metaDataFileLink.innerText = metaDataFileName +' '+metaDataFile.isCustomized;
        metaDataFileItem.appendChild(metaDataFileLink);
        metaDataList.appendChild(metaDataFileItem);
    });
    return metaDataList;
}]]></client_script>
        <description/>
        <direct>false</direct>
        <endpoint/>
        <html><![CDATA[<?xml version="1.0" encoding="utf-8" ?>
<j:jelly trim="false" xmlns:j="jelly:core" xmlns:g="glide" xmlns:j2="null" xmlns:g2="null">
     <p>Select an application to fetch the artifacts</p>
	 <g:ui_reference name="app" id="app_id" table="sys_scope" query="active=true" completer="AJAXTableCompleter" onchange="getArtifacts()" columns="scope"/>
	<div id='response'>
	</div>
	<style>
		ul {
			list-style:none
		}
		i {
			 margin-right:5px
		}
	</style>
</j:jelly>
]]></html>
        <name>application_explorer</name>
        <processing_script/>
        <sys_class_name>sys_ui_page</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2022-07-27 08:02:06</sys_created_on>
        <sys_id>7333f7f72f701110916d50492799b64c</sys_id>
        <sys_mod_count>164</sys_mod_count>
        <sys_name>application_explorer</sys_name>
        <sys_package display_value="Table configuration" source="9c555b512f941110916d50492799b6fa">9c555b512f941110916d50492799b6fa</sys_package>
        <sys_policy/>
        <sys_scope display_value="Table configuration">9c555b512f941110916d50492799b6fa</sys_scope>
        <sys_update_name>sys_ui_page_7333f7f72f701110916d50492799b64c</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2022-08-05 15:28:55</sys_updated_on>
    </sys_ui_page>
</record_update>
